{"version":3,"file":"BMNVMOri.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue"],"sourcesContent":["<script>\nimport { toRefs, defineComponent, h, useSlots, computed } from \"vue\";\nimport { hash } from \"ohash\";\nimport { useAsyncData, fetchContentNavigation, useState, useContent } from \"#imports\";\nimport { NuxtLink } from \"#components\";\nconst ContentNavigation = defineComponent({\n  name: \"ContentNavigation\",\n  props: {\n    /**\n     * A query to be passed to `fetchContentNavigation()`.\n     */\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    }\n  },\n  async setup(props) {\n    const {\n      query\n    } = toRefs(props);\n    const queryBuilder = computed(() => {\n      if (typeof query.value?.params === \"function\") {\n        return query.value.params();\n      }\n      return query.value;\n    });\n    if (!queryBuilder.value && useState(\"dd-navigation\").value) {\n      const { navigation: navigation2 } = useContent();\n      return { navigation: navigation2 };\n    }\n    const { data: navigation } = await useAsyncData(\n      `content-navigation-${hash(queryBuilder.value)}`,\n      () => fetchContentNavigation(queryBuilder.value)\n    );\n    return { navigation };\n  },\n  /**\n   * Navigation empty fallback\n   * @slot empty\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const { navigation } = ctx;\n    const renderLink = (link) => h(NuxtLink, { to: link._path }, () => link.title);\n    const renderLinks = (data, level) => h(\n      \"ul\",\n      level ? { \"data-level\": level } : null,\n      data.map((link) => {\n        if (link.children) {\n          return h(\"li\", null, [renderLink(link), renderLinks(link.children, level + 1)]);\n        }\n        return h(\"li\", null, renderLink(link));\n      })\n    );\n    const defaultNode = (data) => renderLinks(data, 0);\n    return slots?.default ? slots.default({ navigation, ...this.$attrs }) : defaultNode(navigation);\n  }\n});\nexport default ContentNavigation;\n</script>\n"],"names":["ContentNavigation","defineComponent","props","query","toRefs","queryBuilder","computed","_a","useState","navigation2","useContent","navigation","useAsyncData","hash","fetchContentNavigation","ctx","slots","useSlots","renderLink","link","h","NuxtLink","renderLinks","data","level","defaultNode","_sfc_main"],"mappings":"8JAKA,MAAMA,EAAoBC,EAAgB,CACxC,KAAM,oBACN,MAAO,CAIL,MAAO,CACL,KAAM,OACN,SAAU,GACV,QAAS,MACX,CACD,EACD,MAAM,MAAMC,EAAO,CACjB,KAAM,CACJ,MAAAC,CACF,EAAIC,EAAOF,CAAK,EACVG,EAAeC,EAAS,IAAM,OAClC,OAAI,QAAOC,EAAAJ,EAAM,QAAN,YAAAI,EAAa,SAAW,WAC1BJ,EAAM,MAAM,SAEdA,EAAM,KACf,CAAC,EACD,GAAI,CAACE,EAAa,OAASG,EAAS,eAAe,EAAE,MAAO,CAC1D,KAAM,CAAE,WAAYC,CAAY,EAAIC,EAAU,EAC9C,MAAO,CAAE,WAAYD,EACvB,CACA,KAAM,CAAE,KAAME,CAAW,EAAI,MAAMC,EACjC,sBAAsBC,EAAKR,EAAa,KAAK,CAAC,GAC9C,IAAMS,EAAuBT,EAAa,KAAK,GAEjD,MAAO,CAAE,WAAAM,EACV,EAKD,OAAOI,EAAK,CACV,MAAMC,EAAQC,IACR,CAAE,WAAAN,GAAeI,EACjBG,EAAcC,GAASC,EAAEC,EAAU,CAAE,GAAIF,EAAK,KAAO,EAAE,IAAMA,EAAK,KAAK,EACvEG,EAAc,CAACC,EAAMC,IAAUJ,EACnC,KACAI,EAAQ,CAAE,aAAcA,CAAI,EAAM,KAClCD,EAAK,IAAKJ,GACJA,EAAK,SACAC,EAAE,KAAM,KAAM,CAACF,EAAWC,CAAI,EAAGG,EAAYH,EAAK,SAAUK,EAAQ,CAAC,CAAC,CAAC,EAEzEJ,EAAE,KAAM,KAAMF,EAAWC,CAAI,CAAC,CACtC,GAEGM,EAAeF,GAASD,EAAYC,EAAM,CAAC,EACjD,OAAOP,GAAA,MAAAA,EAAO,QAAUA,EAAM,QAAQ,CAAE,WAAAL,EAAY,GAAG,KAAK,MAAQ,CAAA,EAAIc,EAAYd,CAAU,CAChG,CACF,CAAC,EACMe,EAAW1B","x_google_ignoreList":[0]}